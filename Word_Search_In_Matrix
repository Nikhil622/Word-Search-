class Solution{
public:
    bool isValid(int i,int j,int m,int n,vector<vector<bool>>&visited)
    {
        return (i>=0 && i<m && j>=0 && j<n && visited[i][j]==false);
    }
    bool fun(int idx,int x,int y,vector<vector<char>>& board, string&word,vector<vector<bool>>&visited)
    {   if(idx==word.size() || (idx==word.size()-1 && board[x][y]==word[idx]))
          return true;
        if(board[x][y]!=word[idx])
          return false;
        static int a[]={0,0,-1,1};
        static int b[]={-1,1,0,0};
        visited[x][y]=true;
        for(int k=0;k<4;++k)
        {  if(isValid(x+a[k],y+b[k],board.size(),board[0].size(),visited)==true)
            {  if(fun(idx+1,x+a[k],y+b[k],board,word,visited)==true)
                 return true;
            }
        }
       visited[x][y]=false;
       return false;
    }
    bool isWordExist(vector<vector<char>>& board, string word) {
        int m=board.size(),n=board[0].size();
        vector<vector<bool>>visited(m,vector<bool>(n,false));
        for(int i=0;i<m;++i)
        {  for(int j=0;j<n;++j)
            {  if(board[i][j]==word[0])
                {  if(fun(0,i,j,board,word,visited)==true)
                     return true;
                }
            }
        }
        return false;
    }
};
